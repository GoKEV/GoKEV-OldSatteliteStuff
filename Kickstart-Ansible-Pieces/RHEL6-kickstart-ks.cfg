################################################################################
###	
###	Basic kickstart example to thin provision a server using PXE
###	and then call Ansible Tower's API for a provisioning callback
###	
###	This works with minimal modification, but is provided as an
###	example only.  Please make sure you know what you're doing
###	and only run this against systems that are test / dev.  You are
###	responsible for whatever you do with this.
###	
###	I'm passionate about simple provisioning, deployment, and server
###	management using simple, stable, and robust tools.  I hope this
###	example is helpful to you.
###
###				-Kev (at) GoKEV.com
###	
################################################################################


### Some basic features here. Use text-based install, then reboot when complete.
text
skipx
install
reboot


### This needs to be the URL of your Satellite Server repo path
url --url http://satellite.lab/pulp/repos/GoKEV/Library/content/dist/rhel/server/6/6.8/x86_64/kickstart


### Some more stuff you can customize if you're not in US / Eastern time zone
timezone --utc US/Eastern
lang en_US
keyboard us


### DHCP network and startup options
network  --bootproto=dhcp --onboot=on
firewall --enabled --ssh
selinux --enforcing
bootloader --location=mbr --append="nofb quiet splash=quiet"


### Set the root password for the new machine.  Either encrypted hash or plaintext:
rootpw --iscrypted $5$UJVcZzAe$4i6jlDxECSe9t8L5Kt/ZFhPPinuiyOjeW8kjVGKPrED
rootpw redhat
auth --useshadow --passalgo=sha256


### This wipes the drive /dev/sda and lays down only a 500mb /boot plus everything else in /  (no swap).  Customize this if you need a different partition scheme. 
zerombr
ignoredisk --only-use=/dev/sda
bootloader --location=mbr 
clearpart --all --drives=/dev/sda --initlabel
partition /boot --asprimary --fstype=ext4 --label BOOT --size=500
partition /     --asprimary --fstype=ext4 --label ROOT --size=4096 --grow


### We install only the core packages
%packages  --nobase
@core
%end


### Here is a post-install snippet where we register to the Satellite server

%post

yum -t -y -e 0 install subscription-manager
rpm -ivh http://satellite.lab/pub/katello-ca-consumer-latest.noarch.rpm
subscription-manager register --org="GoKEV" --activationkey="RHEL7Production"
subscription-manager repos --enable=rhel-*-satellite-tools-*-rpms
yum clean all
yum -y install katello-agent


### Lay down your SSH publickey(s) to allow Ansible Tower to provision as soon as we finish here.

mkdir -p ~root/.ssh

cat << EOF >> ~root/.ssh/authorized_keys
## Tower
ssh-rsa AAAAB3Nza.....ock4x root@ansibletower.lab

EOF

chmod 700 ~root/.ssh
chmod 600 ~root/.ssh/authorized_keys
chown -R root: ~root/.ssh


### Lay down the one-time service that will perform the Ansible Tower provisioning callback.  The extra variables force a reboot (will not reboot on subsequent runs unless that param is passed)
### The following gets written to a file:


cat << EOF > /etc/rc.d/rc3.d/S99ansible-firstboot

# First boot, we run the Ansible callback
/usr/bin/curl -k -f -H 'Content-Type: application/json' -XPOST -d '{"host_config_key": "KEV", "extra_vars": "{\"rebootrequired\": \"yes\"}"}' https://ansibletower:443/api/v1/job_templates/152/callback/

# and then this services removes itself, never to run again!!
/bin/rm /etc/rc.d/rc3.d/S99ansible-firstboot

EOF


# Make the script executable
chmod +x /etc/rc.d/rc3.d/S99ansible-firstboot


%end

