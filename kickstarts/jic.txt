auth --useshadow --passalgo=sha256 --kickstart
install
url --url="http://satellite.labtop/pulp/repos/0465a0f7-ca4c-49f7-8a39-bacf1e33c5d2/Library/content/dist/rhel/server/7/7.2/x86_64/kickstart/"
repo --name="Server-HighAvailability" --baseurl=http://satellite.labtop/pulp/repos/0465a0f7-ca4c-49f7-8a39-bacf1e33c5d2/Library/content/dist/rhel/server/7/7.2/x86_64/kickstart//addons/HighAvailability
repo --name="Server-ResilientStorage" --baseurl=http://satellite.labtop/pulp/repos/0465a0f7-ca4c-49f7-8a39-bacf1e33c5d2/Library/content/dist/rhel/server/7/7.2/x86_64/kickstart//addons/ResilientStorage
text
firewall --enabled --service=ssh
firstboot --disable
ignoredisk --only-use=vda
keyboard --vckeymap=us --xlayouts='us'
lang en_US.UTF-8

network  --bootproto=dhcp --device=52:54:00:5a:d2:1a --hostname=gitrepo.labtop
reboot
rootpw --iscrypted $5$UJVcZzAe$4i6jlDxECSe9t8L5Kt/ZFhPPinuiyOjeW8kjVGKPrED
selinux --enforcing
skipx
timezone UTC --isUtc
bootloader --append="nofb quiet splash=quiet crashkernel=auto" --location=mbr --boot-drive=vda
autopart --type=lvm
zerombr
clearpart --all --initlabel

%post --nochroot
exec < /dev/tty3 > /dev/tty3
#changing to VT 3 so that we can see whats going on....
/usr/bin/chvt 3
(
cp -va /etc/resolv.conf /mnt/sysimage/etc/resolv.conf
/usr/bin/chvt 1
) 2>&1 | tee /mnt/sysimage/root/install.postnochroot.log
%end

%post
logger "Starting anaconda gitrepo.labtop postinstall"
exec < /dev/tty3 > /dev/tty3

# Calling Ansible Tower to fix us up
/usr/bin/curl -k -s --data "host_config_key=b7fa3c86f88acbb32b9ec920d811aac3" https://ansibletower:443/api/v1/job_templates/16/callback/

#changing to VT 3 so that we can see whats going on....
/usr/bin/chvt 3
(










# eth0 interface
real=`ip -o link | grep 52:54:00:5a:d2:1a | awk '{print $2;}' | sed s/:$//`

# ifcfg files are ignored by NM if their name contains colons so we convert colons to underscore
sanitized_real=$real

cat << EOF > /etc/sysconfig/network-scripts/ifcfg-$sanitized_real
BOOTPROTO="dhcp"
DEVICE=$real
HWADDR="52:54:00:5a:d2:1a"
ONBOOT=yes
PEERDNS=yes
PEERROUTES=yes
EOF




#update local time
echo "updating system time"
/usr/sbin/ntpdate -sub 0.fedora.pool.ntp.org
/usr/sbin/hwclock --systohc


  # add subscription manager
 
  yum -t -y -e 0 install subscription-manager
  rpm -ivh http://satellite.labtop/pub/katello-ca-consumer-latest.noarch.rpm
 

  echo "Registering the System"
  subscription-manager register --org="0465a0f7-ca4c-49f7-8a39-bacf1e33c5d2" --name="gitrepo.labtop" --activationkey="RHEL7KS"

  
    echo "Enabling Satellite Tools Repo"
    echo "DEPRECATED: This may be removed in a future version of Satellite, please add Satellite Tools to your activation key(s)."
    subscription-manager repos --enable=rhel-*-satellite-tools-*-rpms
  

  
    echo "Installing Katello Agent"
    yum -t -y -e 0 install katello-agent
    chkconfig goferd on
  




# update all the base packages from the updates repository
yum -t -y -e 0 update


# SSH keys setup snippet
#
# Parameters:
#
# remote_execution_ssh_keys: public keys to be put in ~/.ssh/authorized_keys
#
# remote_execution_ssh_user: user for which remote_execution_ssh_keys will be
#                            authorized
#
# This template sets up SSH keys in any host so that as long as your public
# SSH key is in remote_execution_ssh_keys, you can SSH into a host.

# A personal recomendation: create a global parameter remote_execution_ssh_keys
# and put your keys there, so that you can access any newly provisioned host
# without having to set up the parameter on every host or host group.


mkdir -p ~root/.ssh

cat << EOF >> ~root/.ssh/authorized_keys
ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC0Vn0a8NWizvvIIye9aL2AD2L0QjQvW1peXpALlIr+R7nnd0fwfA7AAX0ijZZlkFSgb+NVeJJfpTN2goje4o2lxdPtSf3+2aL3quyynke4V9wQqo1GwBdPf+LnnDVoWDrh56qZgrUfNQzGyQ1Q8T3axW45Qi3JIYnF3xKvGn9HfPUh1WI1quN1UdAu+QYUbucXtkU6Nl2quSG+ju46VRu66sXuSb7k9qZMIM4MqoGU5H73oRA9B4s9DFLt/p9+l7EzIqViMr6mc3WLe033daWRejnxaFNImmSXcv5hosdjKM7+D+NkLd7vjutjW1vFf79z+AB/AbzP3R23Za/B7KwT foreman-proxy@satellite.labtop
EOF

chmod 700 ~root/.ssh
chmod 600 ~root/.ssh/authorized_keys
chown -R root: ~root/.ssh

# Restore SELinux context with restorecon, if it's available:
command -v restorecon && restorecon -RvF ~root/.ssh || true


sync

# Inform the build system that we are done.
echo "Informing Foreman that we are built"
wget -q -O /dev/null --no-check-certificate http://satellite.labtop/unattended/built?token=1c72bdcb-7346-41a7-beca-433e20c3ebf2
) 2>&1 | tee /root/install.post.log
exit 0

%end

%packages --ignoremissing
@Core
dhclient
kexec-tools
ntp
wget
yum

%end

%addon com_redhat_kdump --enable --reserve-mb='auto'

%end
